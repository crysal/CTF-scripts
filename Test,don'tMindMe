#!/bin/bash
#1 blank pixel = l
#Multiple l's = / (sed 's/l.*l/\//g')
#>1 non blank = -
# 1 non blank = . 
#convert $input1 -crop 1x1+1+1 txt:-
#1x1 = only show 1 pixel
#+1+1= move one down & move one left
#convert $input1 -crop 1x1+$CurrentYCord+$CurrentXCord txt:-

input1=$1
BackgroundValue=$(awk "BEGIN {print $(convert $input1 -crop 1x1+0+0 txt:- | tail -1 | awk '{print $4}' | sed 's/srgb(//g' | sed 's/)//g' | sed 's/,/+/g')}")
#getting combined rgb values of background (should be uniqe for each sample)
DotValue=$(awk "BEGIN {print $(convert $input1 -crop 1x1+1+1 txt:- | tail -1 | awk '{print $4}' | sed 's/srgb(//g' | sed 's/)//g' | sed 's/,/+/g')}")
#getting combined rgb values of dots (should be uniqe for each sample)

SizeX=$(file $input1 | awk '{print $5}')
SizeY=$(file $input1 | awk '{print $7}' | sed 's/,//g' )
#when setting cords based on file output remember to -1 cause of the offset of convert

CurrentXCord=1
CurrentYCord=1
CurrentRGBValue=$(awk "BEGIN {print $(convert $input1 -crop 1x1+$CurrentYCord+$CurrentXCord txt:- | tail -1 | awk '{print $4}' | sed 's/srgb(//g' | sed 's/)//g' | sed 's/,/+/g')}")

BlankDecetcor=0 #Counter for blanks in a row, if goes above 1 should change row and put a slash(/)
DotDecetor=0    #Counter for dots and dashes, if goes to 1 then blank goes to 1 put a Dot (.), if goes above 2 then blank goes to 1 put a Dash (-)

if [ $CurrentRGBValue -eq $BackgroundValue ]
then
BlankDecetcor=$(($BlankDecetcor+1))
CurrentXCord=$(($CurrentXCord+1))
fi
if [ $CurrentRGBValue -eq $DotDecetor ]
then
DotDecetor=$(($DotDecetor+1))
CurrentXCord=$(($CurrentXCord+1))
fi

if [ $BlankDecetcor -gt 1 ]
then 
echo "/" >> morse 
BlankDecetcor=0
DotDecetor=0
CurrentYCord=$(($CurrentYCord+2))
fi
if [ $DotDecetor -eq 1 ] && [ $BlankDecetcor -eq 1 ]
then
echo "." >> morse
BlankDecetcor=0
DotDecetor=0
fi
if [ $DotDecetor -qt 1 ] && [ $BlankDecetcor -eq 1 ]
then
echo "-" >> morse
BlankDecetcor=0
DotDecetor=0
fi

##DotDecetor making



